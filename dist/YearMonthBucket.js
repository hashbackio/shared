'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCurrentYearMonthBucket = exports.getYearMonthBucket = exports.YearMonthBucketSchema = exports.YearMonthBucketRegex = undefined;

var _joiBrowser = require('joi-browser');

var _joiBrowser2 = _interopRequireDefault(_joiBrowser);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var YearMonthBucketRegex = exports.YearMonthBucketRegex = /^\d{4}-\d{2}$/;
var YearMonthBucketSchema = exports.YearMonthBucketSchema = _joiBrowser2.default.string().regex(YearMonthBucketRegex);

var validateEmailPostBody = function validateEmailPostBody(maybeYMB) {
  return Promise.resolve().then(function () {
    var _Joi$validate = _joiBrowser2.default.validate(maybeYMB, YearMonthBucketSchema),
        error = _Joi$validate.error,
        value = _Joi$validate.value;

    if (error) {
      return Promise.reject(error.annotate(true));
    }

    return value;
  });
};

var getYearMonthBucket = exports.getYearMonthBucket = function getYearMonthBucket(maybeYMB) {
  return validateEmailPostBody(maybeYMB);
};

var getCurrentYearMonthBucket = exports.getCurrentYearMonthBucket = function getCurrentYearMonthBucket() {
  return getYearMonthBucket((0, _moment2.default)().format('YYYY-MM'));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ZZWFyTW9udGhCdWNrZXQuanMiXSwibmFtZXMiOlsiWWVhck1vbnRoQnVja2V0UmVnZXgiLCJZZWFyTW9udGhCdWNrZXRTY2hlbWEiLCJzdHJpbmciLCJyZWdleCIsInZhbGlkYXRlRW1haWxQb3N0Qm9keSIsIm1heWJlWU1CIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ0aGVuIiwidmFsaWRhdGUiLCJlcnJvciIsInZhbHVlIiwicmVqZWN0IiwiYW5ub3RhdGUiLCJnZXRZZWFyTW9udGhCdWNrZXQiLCJnZXRDdXJyZW50WWVhck1vbnRoQnVja2V0IiwiZm9ybWF0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7Ozs7QUFDQTs7Ozs7O0FBSU8sSUFBTUEsc0RBQXVCLGVBQTdCO0FBQ0EsSUFBTUMsd0RBQXdCLHFCQUFJQyxNQUFKLEdBQWFDLEtBQWIsQ0FBbUJILG9CQUFuQixDQUE5Qjs7QUFFUCxJQUFNSSx3QkFBd0IsU0FBeEJBLHFCQUF3QixDQUM1QkMsUUFENEI7QUFBQSxTQUc1QkMsUUFBUUMsT0FBUixHQUFrQkMsSUFBbEIsQ0FBdUIsWUFBNkM7QUFBQSx3QkFDekMscUJBQUlDLFFBQUosQ0FBYUosUUFBYixFQUF1QkoscUJBQXZCLENBRHlDO0FBQUEsUUFDMURTLEtBRDBELGlCQUMxREEsS0FEMEQ7QUFBQSxRQUNuREMsS0FEbUQsaUJBQ25EQSxLQURtRDs7QUFHbEUsUUFBSUQsS0FBSixFQUFXO0FBQ1QsYUFBT0osUUFBUU0sTUFBUixDQUFlRixNQUFNRyxRQUFOLENBQWUsSUFBZixDQUFmLENBQVA7QUFDRDs7QUFFRCxXQUFPRixLQUFQO0FBQ0QsR0FSRCxDQUg0QjtBQUFBLENBQTlCOztBQWFPLElBQU1HLGtEQUFxQixTQUFyQkEsa0JBQXFCLENBQUNULFFBQUQ7QUFBQSxTQUNoQ0Qsc0JBQXNCQyxRQUF0QixDQURnQztBQUFBLENBQTNCOztBQUdBLElBQU1VLGdFQUE0QixTQUE1QkEseUJBQTRCO0FBQUEsU0FDdkNELG1CQUFtQix3QkFBU0UsTUFBVCxDQUFnQixTQUFoQixDQUFuQixDQUR1QztBQUFBLENBQWxDIiwiZmlsZSI6IlllYXJNb250aEJ1Y2tldC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCBKb2kgZnJvbSAnam9pLWJyb3dzZXInO1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuXG5leHBvcnQgb3BhcXVlIHR5cGUgWWVhck1vbnRoQnVja2V0VHlwZTogc3RyaW5nID0gc3RyaW5nO1xuXG5leHBvcnQgY29uc3QgWWVhck1vbnRoQnVja2V0UmVnZXggPSAvXlxcZHs0fS1cXGR7Mn0kLztcbmV4cG9ydCBjb25zdCBZZWFyTW9udGhCdWNrZXRTY2hlbWEgPSBKb2kuc3RyaW5nKCkucmVnZXgoWWVhck1vbnRoQnVja2V0UmVnZXgpO1xuXG5jb25zdCB2YWxpZGF0ZUVtYWlsUG9zdEJvZHkgPSAoXG4gIG1heWJlWU1COiBzdHJpbmdcbik6IFByb21pc2U8WWVhck1vbnRoQnVja2V0VHlwZT4gPT5cbiAgUHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKTogUHJvbWlzZTxzdHJpbmc+IHwgWWVhck1vbnRoQnVja2V0VHlwZSA9PiB7XG4gICAgY29uc3QgeyBlcnJvciwgdmFsdWUgfSA9IEpvaS52YWxpZGF0ZShtYXliZVlNQiwgWWVhck1vbnRoQnVja2V0U2NoZW1hKTtcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yLmFubm90YXRlKHRydWUpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG4gIH0pO1xuXG5leHBvcnQgY29uc3QgZ2V0WWVhck1vbnRoQnVja2V0ID0gKG1heWJlWU1COiBzdHJpbmcpID0+XG4gIHZhbGlkYXRlRW1haWxQb3N0Qm9keShtYXliZVlNQik7XG5cbmV4cG9ydCBjb25zdCBnZXRDdXJyZW50WWVhck1vbnRoQnVja2V0ID0gKCkgPT5cbiAgZ2V0WWVhck1vbnRoQnVja2V0KG1vbWVudCgpLmZvcm1hdCgnWVlZWS1NTScpKTtcbiJdfQ==